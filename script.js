// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let tapCount = localStorage.getItem('tapCount') ? parseInt(localStorage.getItem('tapCount')) : 0;
let energy = localStorage.getItem('energy') ? parseInt(localStorage.getItem('energy')) : 5000;
let lastEnergyRefill = localStorage.getItem('lastEnergyRefill') ? parseInt(localStorage.getItem('lastEnergyRefill')) : Date.now();
let lastTap = localStorage.getItem('lastTap') ? parseInt(localStorage.getItem('lastTap')) : Date.now();
let nickname = localStorage.getItem('nickname');
let dailyStreak = localStorage.getItem('dailyStreak') ? parseInt(localStorage.getItem('dailyStreak')) : 0;
let lastDailyReward = localStorage.getItem('lastDailyReward') ? parseInt(localStorage.getItem('lastDailyReward')) : 0;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const tapCountElement = document.getElementById('tap-count');
const energyCountElement = document.getElementById('energy-count');
const nicknameDisplay = document.getElementById('nickname-display');
const tapButton = document.getElementById('tap-button');
const leaderboardTable = document.getElementById('leaderboard-table');
const nicknameForm = document.getElementById('nickname-form');
const nicknameInput = document.getElementById('nickname-input');
const errorMessage = document.getElementById('error-message');
const gameSection = document.getElementById('game-section');
const nicknameSection = document.getElementById('nickname-section');
const leaderboardSection = document.getElementById('leaderboard-section');
const timerCountElement = document.getElementById('timer-count');
const resetTimerElement = document.createElement('p'); // –ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç–∞–π–º–µ—Ä–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è
const rankDisplayElement = document.getElementById('rank-display');

// –ü—Ä–æ–º–æ–∫–æ–¥—ã
const promoInput = document.getElementById('promo-input');
const promoButton = document.getElementById('promo-button');
const promoMessage = document.getElementById('promo-message');

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –æ–±–Ω—É–ª–µ–Ω–∏—è –ø–æ–¥ –Ω–∏–∫–æ–º
nicknameDisplay.insertAdjacentElement('afterend', resetTimerElement);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–∞–ø–æ–≤
const getRank = (tapCount) => {
    if (tapCount >= 1000000000) {
        return { rank: 'Hellsteel', emoji: 'üî•', next: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥', tapsForNext: 0 };
    } else if (tapCount >= 100000000) {
        return { rank: '–ê–ª–º–∞–∑', emoji: 'üíé', next: 'Hellsteel', tapsForNext: 1000000000 - tapCount };
    } else if (tapCount >= 1000000) {
        return { rank: '–ó–æ–ª–æ—Ç–æ', emoji: 'ü•á', next: '–ê–ª–º–∞–∑', tapsForNext: 100000000 - tapCount };
    } else if (tapCount >= 100000) {
        return { rank: '–ñ–µ–ª–µ–∑–æ', emoji: 'üõ†Ô∏è', next: '–ó–æ–ª–æ—Ç–æ', tapsForNext: 1000000 - tapCount };
    } else if (tapCount >= 10000) {
        return { rank: '–ú–µ–¥—å', emoji: 'ü•â', next: '–ñ–µ–ª–µ–∑–æ', tapsForNext: 100000 - tapCount };
    } else {
        return { rank: '–ë—Ä–æ–Ω–∑–∞', emoji: 'üü´', next: '–ú–µ–¥—å', tapsForNext: 10000 - tapCount };
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–Ω–≥–∞
const updateRankDisplay = () => {
    const { rank, emoji, next, tapsForNext } = getRank(tapCount);
    
    if (tapsForNext > 0) {
        rankDisplayElement.textContent = `${emoji} ${rank} ${tapCount.toLocaleString()} / ${next} ${tapsForNext.toLocaleString()}`;
    } else {
        rankDisplayElement.textContent = `${emoji} ${rank} (–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥)`;
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ —Ç–∞–ø–∞–ª 24 —á–∞—Å–∞
const checkResetProgress = () => {
    const now = Date.now();
    const timePassed = now - lastTap;
    
    if (timePassed >= 86400000) { // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        tapCount = 0;
        localStorage.setItem('tapCount', tapCount);
        alert('–í–∞—à–∏ —Ç–∞–ø—ã –æ–±–Ω—É–ª–∏–ª–∏—Å—å –∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤!');
        window.location.reload();
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –¥–æ –æ–±–Ω—É–ª–µ–Ω–∏—è
const updateResetTimer = () => {
    const now = Date.now();
    const timePassed = now - lastTap;
    const timeLeft = 86400000 - timePassed;

    if (timeLeft > 0) {
        const hours = Math.floor(timeLeft / 3600000);
        const minutes = Math.floor((timeLeft % 3600000) / 60000);
        const seconds = Math.floor((timeLeft % 60000) / 1000);
        resetTimerElement.textContent = `–û–±–Ω—É–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —á–µ—Ä–µ–∑: ${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
    } else {
        resetTimerElement.textContent = '00:00:00';
    }
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏
const checkEnergyRefill = () => {
    const now = Date.now();
    const timePassed = now - lastEnergyRefill;

    // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ —á–∞—Å–∞ (3600000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥), –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 5000 —ç–Ω–µ—Ä–≥–∏–∏
    if (timePassed >= 3600000) {
        const energyToAdd = Math.floor(timePassed / 3600000) * 5000;
        energy = Math.min(50000, energy + energyToAdd); // –õ–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏ 50 000
        lastEnergyRefill = now;
        localStorage.setItem('lastEnergyRefill', lastEnergyRefill);
        localStorage.setItem('energy', energy);
        energyCountElement.textContent = energy;
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏
const updateEnergyTimer = () => {
    const now = Date.now();
    const timePassed = now - lastEnergyRefill;
    const timeLeft = 3600000 - timePassed;

    if (timeLeft > 0) {
        const minutes = Math.floor(timeLeft / 60000);
        const seconds = Math.floor((timeLeft % 60000) / 1000);
        timerCountElement.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
    } else {
        timerCountElement.textContent = '00:00';
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –ø—Ä–∏–∑–∞
const checkDailyReward = () => {
    const now = Date.now();
    const oneDay = 86400000; // 1 –¥–µ–Ω—å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    if (now - lastDailyReward >= oneDay) {
        dailyStreak++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–µ—Ä–∏—é –≤—Ö–æ–¥–æ–≤
        const energyReward = dailyStreak % 2 === 0 ? dailyStreak * 5000 : 0; // –ö–∞–∂–¥—ã–π 2-–π –¥–µ–Ω—å —ç–Ω–µ—Ä–≥–∏—è
        const tapReward = dailyStreak % 2 !== 0 ? dailyStreak * 10000 : 0; // –ö–∞–∂–¥—ã–π 1-–π –¥–µ–Ω—å —Ç–∞–ø—ã

        if (energyReward > 0) {
            energy = Math.min(50000, energy + energyReward); // –õ–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏ 50 000
            localStorage.setItem('energy', energy);
            energyCountElement.textContent = energy;
        }

        if (tapReward > 0) {
            tapCount += tapReward;
            localStorage.setItem('tapCount', tapCount);
            tapCountElement.textContent = tapCount;
            updateRankDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–Ω–≥
        }

        lastDailyReward = now;
        localStorage.setItem('dailyStreak', dailyStreak);
        localStorage.setItem('lastDailyReward', lastDailyReward);
        alert(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–∏–∑: ${tapReward > 0 ? tapReward + ' —Ç–∞–ø–æ–≤' : energyReward + ' —ç–Ω–µ—Ä–≥–∏–∏'}!`);
    }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–µ "–¢–∞–ø"
tapButton.addEventListener('click', () => {
    if (energy > 0) {
        tapCount++;
        energy--;

        tapCountElement.textContent = tapCount;
        energyCountElement.textContent = energy;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('tapCount', tapCount);
        localStorage.setItem('energy', energy);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–Ω–≥
        updateRankDisplay();

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–∞–ø–∞
        lastTap = Date.now();
        localStorage.setItem('lastTap', lastTap);
    } else {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Å –Ω–∏–∫–æ–º
nicknameForm.addEventListener('submit', (event) => {
    event.preventDefault();
    const nicknameValue = nicknameInput.value.trim();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∏–∫ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –Ω–µ –±–æ–ª–µ–µ 2 —Ü–∏—Ñ—Ä
    if (/^[a-zA-Z]*\d{0,2}$/.test(nicknameValue)) {
        nickname = nicknameValue;
        localStorage.setItem('nickname', nickname);

        nicknameDisplay.textContent = `–í–∞—à –Ω–∏–∫: ${nickname}`;
        nicknameSection.style.display = 'none';
        gameSection.style.display = 'block';

        checkDailyReward();
        checkEnergyRefill();
        checkResetProgress();
        setInterval(updateEnergyTimer, 1000);
        setInterval(updateResetTimer, 1000);
    } else {
        errorMessage.textContent = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–∏–∫! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ –Ω–µ –±–æ–ª–µ–µ 2 —Ü–∏—Ñ—Ä.';
    }
});

// –ü—Ä–æ–º–æ–∫–æ–¥—ã
promoButton.addEventListener('click', () => {
    const promoCodes = {
        '5984': 100000, 
        'kvadratser1y': 150000
        'J8fJj9fir': 100000000
    };

    const enteredCode = promoInput.value.trim();

    if (promoCodes.hasOwnProperty(enteredCode)) {
        const tapsToAdd = promoCodes[enteredCode];
        tapCount += tapsToAdd;
        localStorage.setItem('tapCount', tapCount);
        tapCountElement.textContent = tapCount;
        updateRankDisplay();

        promoMessage.textContent = `–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${tapsToAdd.toLocaleString()} —Ç–∞–ø–æ–≤.`;
        promoMessage.style.color = 'green';
        promoInput.value = '';
    } else {
        promoMessage.textContent = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!';
        promoMessage.style.color = 'red';
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
if (nickname) {
    nicknameDisplay.textContent = `–í–∞—à –Ω–∏–∫: ${nickname}`;
    nicknameSection.style.display = 'none';
    gameSection.style.display = 'block';
    checkDailyReward();
    checkEnergyRefill();
    checkResetProgress();
    setInterval(updateEnergyTimer, 1000);
    setInterval(updateResetTimer, 1000);
}

tapCountElement.textContent = tapCount;
energyCountElement.textContent = energy;
updateRankDisplay();
